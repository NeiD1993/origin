/*  Created: 27.03.2017
    Author: Dmitry Vasiliev
    Text editor: Sublime Text
    GitHub: swimmwatch  */

declare module 'util-time' {

  export class Timer {

    /**
     * Start the timer
     * @param duration Duration of timer
     * @param callback Callback function
     * @memberof Timer
     * @public
     */
    public start(duration: number, callback: (timestamp?: number) => void): void;

    /**
     * Reset the timer
     * @memberof Timer
     * @public
     */
    public reset(): void;

    /**
     * Pause the timer
     * @param delay Delay on pause
     * @memberof Timer
     * @public
     */
    public pause(delay?: number): void;

    /**
     * Add to duration of timer.
     * @param amount Amount of milliseconds
     * @memberof Timer
     * @public
     */
    public add(amount: number): void;

    /**
     * Reduce to remaining duration of timer.
     * @param amount Amount of milliseconds
     * @memberof Timer
     * @public
     */
    public reduce(amount: number): void;

    /**
     * Continue the timer
     * @memberof Timer
     * @public
     */
    public continue(): void;

  }

  export class Interval {

    /**
     * Start the interval
     * @param interval Interval.
     * @param callback Callback.
     * @memberof Interval
     * @public
     */
    public start(interval: number, callback: (iter: number) => void, count?: number): void;

    /**
     * Reset the interval
     * @memberof Interval
     * @public
     */
    public reset(): void;

    /**
     * Pause the interval.
     * @param delay Delay.
     * @memberof Interval
     * @public
     */
    public pause(delay?: number): void;

    /**
     * Add iterations to the interval.
     * @param amount Amount of iterations.
     * @memberof Interval
     * @public
     */
    public add(amount: number): void;

    /**
     * Reduce iterations to the interval.
     * @param amount Amount of iterations.
     * @memberof Interval
     * @public
     */
    public reduce(amount: number): void;

    /**
     * Continue the interval.
     * @memberof Interval
     * @public
     */
    public continue(): void;

  }

}
